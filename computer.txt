Computer
From Wikipedia, the free encyclopedia
Jump to navigation
Jump to search
"Computer system" redirects here. For other uses, see Computer (disambiguation) and Computer system (disambiguation).
Computer
Acer Aspire 8920 Gemstone.jpgColumbia Supercomputer - NASA Advanced Supercomputing Facility.jpgIntertec Superbrain.jpg
2010-01-26-technikkrempel-by-RalfR-05.jpgThinking Machines Connection Machine CM-5 Frostburg 2.jpgG5 supplying Wikipedia via Gigabit at the Lange Nacht der Wissenschaften 2006 in Dresden.JPG
DM IBM S360.jpgAcorn BBC Master Series Microcomputer.jpgDell PowerEdge Servers.jpg
Computers and computing devices from different eras

A computer is a device that can be instructed to carry out sequences of arithmetic or logical operations automatically via computer programming. Modern computers have the ability to follow generalized sets of operations, called programs. These programs enable computers to perform an extremely wide range of tasks.

Computers are used as control systems for a wide variety of industrial and consumer devices. This includes simple special purpose devices like microwave ovens and remote controls, factory devices such as industrial robots and computer-aided design, and also general purpose devices like personal computers and mobile devices such as smartphones.

Early computers were only conceived as calculating devices. Since ancient times, simple manual devices like the abacus aided people in doing calculations. Early in the Industrial Revolution, some mechanical devices were built to automate long tedious tasks, such as guiding patterns for looms. More sophisticated electrical machines did specialized analog calculations in the early 20th century. The first digital electronic calculating machines were developed during World War II. The speed, power, and versatility of computers have been increasing dramatically ever since then.

Conventionally, a modern computer consists of at least one processing element, typically a central processing unit (CPU), and some form of memory. The processing element carries out arithmetic and logical operations, and a sequencing and control unit can change the order of operations in response to stored information. Peripheral devices include input devices (keyboards, mice, joystick, etc.), output devices (monitor screens, printers, etc.), and input/output devices that perform both functions (e.g., the 2000s-era touchscreen). Peripheral devices allow information to be retrieved from an external source and they enable the result of operations to be saved and retrieved.
Contents

    1 Etymology
    2 History
        2.1 Pre-20th century
        2.2 First computing device
        2.3 Analog computers
        2.4 Digital computers
        2.5 Modern computers
        2.6 Mobile computers
    3 Types
        3.1 Based on uses
        3.2 Based on sizes
    4 Hardware
        4.1 History of computing hardware
        4.2 Other hardware topics
        4.3 Input devices
        4.4 Output devices
        4.5 Control unit
        4.6 Central processing unit (CPU)
        4.7 Arithmetic logic unit (ALU)
        4.8 Memory
        4.9 Input/output (I/O)
        4.10 Multitasking
        4.11 Multiprocessing
    5 Software
        5.1 Languages
        5.2 Application Software
        5.3 Programs
    6 Firmware
    7 Networking and the Internet
    8 Unconventional computers
    9 Unconventional computing
    10 Future
        10.1 Computer architecture paradigms
        10.2 Artificial intelligence
    11 Professions and organizations
    12 See also
    13 References
    14 Notes
    15 External links

Etymology
A female computer, with microscope and calculator, 1952

According to the Oxford English Dictionary, the first known use of the word "computer" was in 1613 in a book called The Yong Mans Gleanings by English writer Richard Braithwait: "I haue [sic] read the truest computer of Times, and the best Arithmetician that euer [sic] breathed, and he reduceth thy dayes into a short number." This usage of the term referred to a human computer, a person who carried out calculations or computations. The word continued with the same meaning until the middle of the 20th century. Originally, women were often hired as "human computers" because they could be paid less than their male counterparts.[1] By 1943, most human computers were women.[2] From the end of the 19th century the word began to take on its more familiar meaning, a machine that carries out computations.[3]

The Online Etymology Dictionary gives the first attested use of "computer" in the "1640s, [meaning] "one who calculates,"; this is an "... agent noun from compute (v.)". The Online Etymology Dictionary states that the use of the term to mean "calculating machine" (of any type) is from 1897." The Online Etymology Dictionary indicates that the "modern use" of the term, to mean "programmable digital electronic computer" dates from "... 1945 under this name; [in a] theoretical [sense] from 1937, as Turing machine".[4]
History
Main article: History of computing hardware
Pre-20th century
The Ishango bone

Devices have been used to aid computation for thousands of years, mostly using one-to-one correspondence with fingers. The earliest counting device was probably a form of tally stick. Later record keeping aids throughout the Fertile Crescent included calculi (clay spheres, cones, etc.) which represented counts of items, probably livestock or grains, sealed in hollow unbaked clay containers.[5][6] The use of counting rods is one example.
The Chinese Suanpan (算盘) (the number represented on this abacus is 6,302,715,408)

The abacus was initially used for arithmetic tasks. The Roman abacus was developed from devices used in Babylonia as early as 2400 BC. Since then, many other forms of reckoning boards or tables have been invented. In a medieval European counting house, a checkered cloth would be placed on a table, and markers moved around on it according to certain rules, as an aid to calculating sums of money.
The ancient Greek-designed Antikythera mechanism, dating between 150 and 100 BC, is the world's oldest analog computer.

The Antikythera mechanism is believed to be the earliest mechanical analog "computer", according to Derek J. de Solla Price.[7] It was designed to calculate astronomical positions. It was discovered in 1901 in the Antikythera wreck off the Greek island of Antikythera, between Kythera and Crete, and has been dated to circa 100 BC. Devices of a level of complexity comparable to that of the Antikythera mechanism would not reappear until a thousand years later.

Many mechanical aids to calculation and measurement were constructed for astronomical and navigation use. The planisphere was a star chart invented by Abū Rayhān al-Bīrūnī in the early 11th century.[8] The astrolabe was invented in the Hellenistic world in either the 1st or 2nd centuries BC and is often attributed to Hipparchus. A combination of the planisphere and dioptra, the astrolabe was effectively an analog computer capable of working out several different kinds of problems in spherical astronomy. An astrolabe incorporating a mechanical calendar computer[9][10] and gear-wheels was invented by Abi Bakr of Isfahan, Persia in 1235.[11] Abū Rayhān al-Bīrūnī invented the first mechanical geared lunisolar calendar astrolabe,[12] an early fixed-wired knowledge processing machine[13] with a gear train and gear-wheels,[14] circa 1000 AD.

The sector, a calculating instrument used for solving problems in proportion, trigonometry, multiplication and division, and for various functions, such as squares and cube roots, was developed in the late 16th century and found application in gunnery, surveying and navigation.

The planimeter was a manual instrument to calculate the area of a closed figure by tracing over it with a mechanical linkage.
A slide rule

The slide rule was invented around 1620–1630, shortly after the publication of the concept of the logarithm. It is a hand-operated analog computer for doing multiplication and division. As slide rule development progressed, added scales provided reciprocals, squares and square roots, cubes and cube roots, as well as transcendental functions such as logarithms and exponentials, circular and hyperbolic trigonometry and other functions. Slide rules with special scales are still used for quick performance of routine calculations, such as the E6B circular slide rule used for time and distance calculations on light aircraft.

In the 1770s, Pierre Jaquet-Droz, a Swiss watchmaker, built a mechanical doll (automaton) that could write holding a quill pen. By switching the number and order of its internal wheels different letters, and hence different messages, could be produced. In effect, it could be mechanically "programmed" to read instructions. Along with two other complex machines, the doll is at the Musée d'Art et d'Histoire of Neuchâtel, Switzerland, and still operates.[15]

The tide-predicting machine invented by Sir William Thomson in 1872 was of great utility to navigation in shallow waters. It used a system of pulleys and wires to automatically calculate predicted tide levels for a set period at a particular location.

The differential analyser, a mechanical analog computer designed to solve differential equations by integration, used wheel-and-disc mechanisms to perform the integration. In 1876, Lord Kelvin had already discussed the possible construction of such calculators, but he had been stymied by the limited output torque of the ball-and-disk integrators.[16] In a differential analyzer, the output of one integrator drove the input of the next integrator, or a graphing output. The torque amplifier was the advance that allowed these machines to work. Starting in the 1920s, Vannevar Bush and others developed mechanical differential analyzers.
First computing device
A portion of Babbage's Difference engine.

Charles Babbage, an English mechanical engineer and polymath, originated the concept of a programmable computer. Considered the "father of the computer",[17] he conceptualized and invented the first mechanical computer in the early 19th century. After working on his revolutionary difference engine, designed to aid in navigational calculations, in 1833 he realized that a much more general design, an Analytical Engine, was possible. The input of programs and data was to be provided to the machine via punched cards, a method being used at the time to direct mechanical looms such as the Jacquard loom. For output, the machine would have a printer, a curve plotter and a bell. The machine would also be able to punch numbers onto cards to be read in later. The Engine incorporated an arithmetic logic unit, control flow in the form of conditional branching and loops, and integrated memory, making it the first design for a general-purpose computer that could be described in modern terms as Turing-complete.[18][19]

The machine was about a century ahead of its time. All the parts for his machine had to be made by hand – this was a major problem for a device with thousands of parts. Eventually, the project was dissolved with the decision of the British Government to cease funding. Babbage's failure to complete the analytical engine can be chiefly attributed to difficulties not only of politics and financing, but also to his desire to develop an increasingly sophisticated computer and to move ahead faster than anyone else could follow. Nevertheless, his son, Henry Babbage, completed a simplified version of the analytical engine's computing unit (the mill) in 1888. He gave a successful demonstration of its use in computing tables in 1906.
Analog computers
Sir William Thomson's third tide-predicting machine design, 1879–81

During the first half of the 20th century, many scientific computing needs were met by increasingly sophisticated analog computers, which used a direct mechanical or electrical model of the problem as a basis for computation. However, these were not programmable and generally lacked the versatility and accuracy of modern digital computers.[20] The first modern analog computer was a tide-predicting machine, invented by Sir William Thomson in 1872. The differential analyser, a mechanical analog computer designed to solve differential equations by integration using wheel-and-disc mechanisms, was conceptualized in 1876 by James Thomson, the brother of the more famous Lord Kelvin.[16]

The art of mechanical analog computing reached its zenith with the differential analyzer, built by H. L. Hazen and Vannevar Bush at MIT starting in 1927. This built on the mechanical integrators of James Thomson and the torque amplifiers invented by H. W. Nieman. A dozen of these devices were built before their obsolescence became obvious. By the 1950s, the success of digital electronic computers had spelled the end for most analog computing machines, but analog computers remained in use during the 1950s in some specialized applications such as education (control systems) and aircraft (slide rule).
Digital computers

It has been suggested that this section be split out into another article titled Digital computer. (Discuss) (May 2017)
Electromechanical

By 1938, the United States Navy had developed an electromechanical analog computer small enough to use aboard a submarine. This was the Torpedo Data Computer, which used trigonometry to solve the problem of firing a torpedo at a moving target. During World War II similar devices were developed in other countries as well.
Replica of Zuse's Z3, the first fully automatic, digital (electromechanical) computer.

Early digital computers were electromechanical; electric switches drove mechanical relays to perform the calculation. These devices had a low operating speed and were eventually superseded by much faster all-electric computers, originally using vacuum tubes. The Z2, created by German engineer Konrad Zuse in 1939, was one of the earliest examples of an electromechanical relay computer.[21]

In 1941, Zuse followed his earlier machine up with the Z3, the world's first working electromechanical programmable, fully automatic digital computer.[22][23] The Z3 was built with 2000 relays, implementing a 22 bit word length that operated at a clock frequency of about 5–10 Hz.[24] Program code was supplied on punched film while data could be stored in 64 words of memory or supplied from the keyboard. It was quite similar to modern machines in some respects, pioneering numerous advances such as floating point numbers. Rather than the harder-to-implement decimal system (used in Charles Babbage's earlier design), using a binary system meant that Zuse's machines were easier to build and potentially more reliable, given the technologies available at that time.[25] The Z3 was Turing complete.[26][27]
Vacuum tubes and digital electronic circuits

Purely electronic circuit elements soon replaced their mechanical and electromechanical equivalents, at the same time that digital calculation replaced analog. The engineer Tommy Flowers, working at the Post Office Research Station in London in the 1930s, began to explore the possible use of electronics for the telephone exchange. Experimental equipment that he built in 1934 went into operation five years later, converting a portion of the telephone exchange network into an electronic data processing system, using thousands of vacuum tubes.[20] In the US, John Vincent Atanasoff and Clifford E. Berry of Iowa State University developed and tested the Atanasoff–Berry Computer (ABC) in 1942,[28] the first "automatic electronic digital computer".[29] This design was also all-electronic and used about 300 vacuum tubes, with capacitors fixed in a mechanically rotating drum for memory.[30]
Colossus, the first electronic digital programmable computing device, was used to break German ciphers during World War II.

During World War II, the British at Bletchley Park achieved a number of successes at breaking encrypted German military communications. The German encryption machine, Enigma, was first attacked with the help of the electro-mechanical bombes which were often run by women.[31][32] To crack the more sophisticated German Lorenz SZ 40/42 machine, used for high-level Army communications, Max Newman and his colleagues commissioned Flowers to build the Colossus.[30] He spent eleven months from early February 1943 designing and building the first Colossus.[33] After a functional test in December 1943, Colossus was shipped to Bletchley Park, where it was delivered on 18 January 1944[34] and attacked its first message on 5 February.[30]

Colossus was the world's first electronic digital programmable computer.[20] It used a large number of valves (vacuum tubes). It had paper-tape input and was capable of being configured to perform a variety of boolean logical operations on its data, but it was not Turing-complete. Nine Mk II Colossi were built (The Mk I was converted to a Mk II making ten machines in total). Colossus Mark I contained 1,500 thermionic valves (tubes), but Mark II with 2,400 valves, was both 5 times faster and simpler to operate than Mark I, greatly speeding the decoding process.[35][36]
ENIAC was the first electronic, Turing-complete device, and performed ballistics trajectory calculations for the United States Army.

The U.S.-built ENIAC[37] (Electronic Numerical Integrator and Computer) was the first electronic programmable computer built in the US. Although the ENIAC was similar to the Colossus, it was much faster, more flexible, and it was Turing-complete. Like the Colossus, a "program" on the ENIAC was defined by the states of its patch cables and switches, a far cry from the stored program electronic machines that came later. Once a program was written, it had to be mechanically set into the machine with manual resetting of plugs and switches. The programmers of the ENIAC were six women, often known collectively as the "ENIAC girls".[38][39]

It combined the high speed of electronics with the ability to be programmed for many complex problems. It could add or subtract 5000 times a second, a thousand times faster than any other machine. It also had modules to multiply, divide, and square root. High speed memory was limited to 20 words (about 80 bytes). Built under the direction of John Mauchly and J. Presper Eckert at the University of Pennsylvania, ENIAC's development and construction lasted from 1943 to full operation at the end of 1945. The machine was huge, weighing 30 tons, using 200 kilowatts of electric power and contained over 18,000 vacuum tubes, 1,500 relays, and hundreds of thousands of resistors, capacitors, and inductors.[40]
Modern computers
Concept of modern computer

The principle of the modern computer was proposed by Alan Turing in his seminal 1936 paper,[41] On Computable Numbers. Turing proposed a simple device that he called "Universal Computing machine" and that is now known as a universal Turing machine. He proved that such a machine is capable of computing anything that is computable by executing instructions (program) stored on tape, allowing the machine to be programmable. The fundamental concept of Turing's design is the stored program, where all the instructions for computing are stored in memory. Von Neumann acknowledged that the central concept of the modern computer was due to this paper.[42] Turing machines are to this day a central object of study in theory of computation. Except for the limitations imposed by their finite memory stores, modern computers are said to be Turing-complete, which is to say, they have algorithm execution capability equivalent to a universal Turing machine.
Stored programs
Three tall racks containing electronic circuit boards
A section of the Manchester Baby, the first electronic stored-program computer

Early computing machines had fixed programs. Changing its function required the re-wiring and re-structuring of the machine.[30] With the proposal of the stored-program computer this changed. A stored-program computer includes by design an instruction set and can store in memory a set of instructions (a program) that details the computation. The theoretical basis for the stored-program computer was laid by Alan Turing in his 1936 paper. In 1945, Turing joined the National Physical Laboratory and began work on developing an electronic stored-program digital computer. His 1945 report "Proposed Electronic Calculator" was the first specification for such a device. John von Neumann at the University of Pennsylvania also circulated his First Draft of a Report on the EDVAC in 1945.[20]

The Manchester Baby was the world's first stored-program computer. It was built at the Victoria University of Manchester by Frederic C. Williams, Tom Kilburn and Geoff Tootill, and ran its first program on 21 June 1948.[43] It was designed as a testbed for the Williams tube, the first random-access digital storage device.[44] Although the computer was considered "small and primitive" by the standards of its time, it was the first working machine to contain all of the elements essential to a modern electronic computer.[45] As soon as the Baby had demonstrated the feasibility of its design, a project was initiated at the university to develop it into a more usable computer, the Manchester Mark 1. Grace Hopper was the first person to develop a compiler for programming language.[2]

The Mark 1 in turn quickly became the prototype for the Ferranti Mark 1, the world's first commercially available general-purpose computer.[46] Built by Ferranti, it was delivered to the University of Manchester in February 1951. At least seven of these later machines were delivered between 1953 and 1957, one of them to Shell labs in Amsterdam.[47] In October 1947, the directors of British catering company J. Lyons & Company decided to take an active role in promoting the commercial development of computers. The LEO I computer became operational in April 1951[48] and ran the world's first regular routine office computer job.
Transistors
A bipolar junction transistor

The bipolar transistor was invented in 1947. From 1955 onwards transistors replaced vacuum tubes in computer designs, giving rise to the "second generation" of computers. Compared to vacuum tubes, transistors have many advantages: they are smaller, and require less power than vacuum tubes, so give off less heat. Silicon junction transistors were much more reliable than vacuum tubes and had longer, indefinite, service life. Transistorized computers could contain tens of thousands of binary logic circuits in a relatively compact space.

At the University of Manchester, a team under the leadership of Tom Kilburn designed and built a machine using the newly developed transistors instead of valves.[49] Their first transistorised computer and the first in the world, was operational by 1953, and a second version was completed there in April 1955. However, the machine did make use of valves to generate its 125 kHz clock waveforms and in the circuitry to read and write on its magnetic drum memory, so it was not the first completely transistorized computer. That distinction goes to the Harwell CADET of 1955,[50] built by the electronics division of the Atomic Energy Research Establishment at Harwell.[50][51]
Integrated circuits

The next great advance in computing power came with the advent of the integrated circuit. The idea of the integrated circuit was first conceived by a radar scientist working for the Royal Radar Establishment of the Ministry of Defence, Geoffrey W.A. Dummer. Dummer presented the first public description of an integrated circuit at the Symposium on Progress in Quality Electronic Components in Washington, D.C. on 7 May 1952.[52]

The first practical ICs were invented by Jack Kilby at Texas Instruments and Robert Noyce at Fairchild Semiconductor.[53] Kilby recorded his initial ideas concerning the integrated circuit in July 1958, successfully demonstrating the first working integrated example on 12 September 1958.[54] In his patent application of 6 February 1959, Kilby described his new device as "a body of semiconductor material ... wherein all the components of the electronic circuit are completely integrated".[55][56] Noyce also came up with his own idea of an integrated circuit half a year later than Kilby.[57] His chip solved many practical problems that Kilby's had not. Produced at Fairchild Semiconductor, it was made of silicon, whereas Kilby's chip was made of germanium.

This new development heralded an explosion in the commercial and personal use of computers and led to the invention of the microprocessor. While the subject of exactly which device was the first microprocessor is contentious, partly due to lack of agreement on the exact definition of the term "microprocessor", it is largely undisputed that the first single-chip microprocessor was the Intel 4004,[58] designed and realized by Ted Hoff, Federico Faggin, and Stanley Mazor at Intel.[59]
Mobile computers

The first mobile computers were heavy and ran from mains power. The 50lb IBM 5100 was an early example. Later portables such as the Osborne 1 and Compaq Portable were considerably lighter, but still needed to be plugged in. The first laptops, such as the Grid Compass, removed this requirement by incorporating batteries - and with the continued miniaturization of computing resources and advancements in portable battery life, portable computers grew in popularity in the 2000s.[60] The same developments allowed manufacturers to integrate computing resources into cellular phones.

These smartphones and tablets run on a variety of operating systems and soon became the dominant computing device on the market, with manufacturers reporting having shipped an estimated 237 million devices in 2Q 2013.[61]
Types

Computers are typically classified based on their uses:
Based on uses

    Analog computer
    Digital computer
    Hybrid computer

Based on sizes

    Smartphone
    Microcomputer
    Workstation
    Personal computer
    Laptop
    Minicomputer
    Mainframe computer
    Supercomputer

Hardware
Main articles: Computer hardware, Personal computer hardware, Central processing unit, and Microprocessor
File:Computer Components.webmPlay media
Video demonstrating the standard components of a "slimline" computer

The term hardware covers all of those parts of a computer that are tangible physical objects. Circuits, computer chips, graphic cards, sound cards, memory (RAM), motherboard, displays, power supplies, cables, keyboards, printers and "mice" input devices are all hardware.
History of computing hardware
Main article: History of computing hardware
First generation (mechanical/electromechanical) 	Calculators 	Pascal's calculator, Arithmometer, Difference engine, Quevedo's analytical machines
Programmable devices 	Jacquard loom, Analytical engine, IBM ASCC/Harvard Mark I, Harvard Mark II, IBM SSEC, Z1, Z2, Z3
Second generation (vacuum tubes) 	Calculators 	Atanasoff–Berry Computer, IBM 604, UNIVAC 60, UNIVAC 120
Programmable devices 	Colossus, ENIAC, Manchester Baby, EDSAC, Manchester Mark 1, Ferranti Pegasus, Ferranti Mercury, CSIRAC, EDVAC, UNIVAC I, IBM 701, IBM 702, IBM 650, Z22
Third generation (discrete transistors and SSI, MSI, LSI integrated circuits) 	Mainframes 	IBM 7090, IBM 7080, IBM System/360, BUNCH
Minicomputer 	HP 2116A, IBM System/32, IBM System/36, LINC, PDP-8, PDP-11
Desktop Computer 	Programma 101, HP 9100
Fourth generation (VLSI integrated circuits) 	Minicomputer 	VAX, IBM System i
4-bit microcomputer 	Intel 4004, Intel 4040
8-bit microcomputer 	Intel 8008, Intel 8080, Motorola 6800, Motorola 6809, MOS Technology 6502, Zilog Z80
16-bit microcomputer 	Intel 8088, Zilog Z8000, WDC 65816/65802
32-bit microcomputer 	Intel 80386, Pentium, Motorola 68000, ARM
64-bit microcomputer[62] 	Alpha, MIPS, PA-RISC, PowerPC, SPARC, x86-64, ARMv8-A
Embedded computer 	Intel 8048, Intel 8051
Personal computer 	Desktop computer, Home computer, Laptop computer, Personal digital assistant (PDA), Portable computer, Tablet PC, Wearable computer
Theoretical/experimental 	Quantum computer, Chemical computer, DNA computing, Optical computer, Spintronics-based computer
Other hardware topics
Peripheral device (input/output) 	Input 	Mouse, keyboard, joystick, image scanner, webcam, graphics tablet, microphone
Output 	Monitor, printer, loudspeaker
Both 	Floppy disk drive, hard disk drive, optical disc drive, teleprinter
Computer buses 	Short range 	RS-232, SCSI, PCI, USB
Long range (computer networking) 	Ethernet, ATM, FDDI

A general purpose computer has four main components: the arithmetic logic unit (ALU), the control unit, the memory, and the input and output devices (collectively termed I/O). These parts are interconnected by buses, often made of groups of wires. Inside each of these parts are thousands to trillions of small electrical circuits which can be turned off or on by means of an electronic switch. Each circuit represents a bit (binary digit) of information so that when the circuit is on it represents a "1", and when off it represents a "0" (in positive logic representation). The circuits are arranged in logic gates so that one or more of the circuits may control the state of one or more of the other circuits.
Input devices

When unprocessed data is sent to the computer with the help of input devices, the data is processed and sent to output devices. The input devices may be hand-operated or automated. The act of processing is mainly regulated by the CPU. Some examples of input devices are:

    Computer keyboard
    Digital camera
    Digital video
    Graphics tablet
    Image scanner
    Joystick
    Microphone
    Mouse
    Overlay keyboard
    Real-time clock
    Trackball
    Touchscreen

Output devices

The means through which computer gives output are known as output devices. Some examples of output devices are:

    Computer monitor
    Printer
    PC speaker
    Projector
    Sound card
    Video card

Control unit
Main articles: CPU design and Control unit
Diagram showing how a particular MIPS architecture instruction would be decoded by the control system

The control unit (often called a control system or central controller) manages the computer's various components; it reads and interprets (decodes) the program instructions, transforming them into control signals that activate other parts of the computer.[63] Control systems in advanced computers may change the order of execution of some instructions to improve performance.

A key component common to all CPUs is the program counter, a special memory cell (a register) that keeps track of which location in memory the next instruction is to be read from.[64]

The control system's function is as follows—note that this is a simplified description, and some of these steps may be performed concurrently or in a different order depending on the type of CPU:

    Read the code for the next instruction from the cell indicated by the program counter.
    Decode the numerical code for the instruction into a set of commands or signals for each of the other systems.
    Increment the program counter so it points to the next instruction.
    Read whatever data the instruction requires from cells in memory (or perhaps from an input device). The location of this required data is typically stored within the instruction code.
    Provide the necessary data to an ALU or register.
    If the instruction requires an ALU or specialized hardware to complete, instruct the hardware to perform the requested operation.
    Write the result from the ALU back to a memory location or to a register or perhaps an output device.
    Jump back to step (1).

Since the program counter is (conceptually) just another set of memory cells, it can be changed by calculations done in the ALU. Adding 100 to the program counter would cause the next instruction to be read from a place 100 locations further down the program. Instructions that modify the program counter are often known as "jumps" and allow for loops (instructions that are repeated by the computer) and often conditional instruction execution (both examples of control flow).

The sequence of operations that the control unit goes through to process an instruction is in itself like a short computer program, and indeed, in some more complex CPU designs, there is another yet smaller computer called a microsequencer, which runs a microcode program that causes all of these events to happen.
Central processing unit (CPU)

The control unit, ALU, and registers are collectively known as a central processing unit (CPU). Early CPUs were composed of many separate components but since the mid-1970s CPUs have typically been constructed on a single integrated circuit called a microprocessor.
Arithmetic logic unit (ALU)
Main article: Arithmetic logic unit

The ALU is capable of performing two classes of operations: arithmetic and logic.[65] The set of arithmetic operations that a particular ALU supports may be limited to addition and subtraction, or might include multiplication, division, trigonometry functions such as sine, cosine, etc., and square roots. Some can only operate on whole numbers (integers) while others use floating point to represent real numbers, albeit with limited precision. However, any computer that is capable of performing just the simplest operations can be programmed to break down the more complex operations into simple steps that it can perform. Therefore, any computer can be programmed to perform any arithmetic operation—although it will take more time to do so if its ALU does not directly support the operation. An ALU may also compare numbers and return boolean truth values (true or false) depending on whether one is equal to, greater than or less than the other ("is 64 greater than 65?"). Logic operations involve Boolean logic: AND, OR, XOR, and NOT. These can be useful for creating complicated conditional statements and processing boolean logic.

Superscalar computers may contain multiple ALUs, allowing them to process several instructions simultaneously.[66] Graphics processors and computers with SIMD and MIMD features often contain ALUs that can perform arithmetic on vectors and matrices.
Memory
Main article: Computer data storage
Magnetic core memory was the computer memory of choice throughout the 1960s, until it was replaced by semiconductor memory.

A computer's memory can be viewed as a list of cells into which numbers can be placed or read. Each cell has a numbered "address" and can store a single number. The computer can be instructed to "put the number 123 into the cell numbered 1357" or to "add the number that is in cell 1357 to the number that is in cell 2468 and put the answer into cell 1595." The information stored in memory may represent practically anything. Letters, numbers, even computer instructions can be placed into memory with equal ease. Since the CPU does not differentiate between different types of information, it is the software's responsibility to give significance to what the memory sees as nothing but a series of numbers.

In almost all modern computers, each memory cell is set up to store binary numbers in groups of eight bits (called a byte). Each byte is able to represent 256 different numbers (28 = 256); either from 0 to 255 or −128 to +127. To store larger numbers, several consecutive bytes may be used (typically, two, four or eight). When negative numbers are required, they are usually stored in two's complement notation. Other arrangements are possible, but are usually not seen outside of specialized applications or historical contexts. A computer can store any kind of information in memory if it can be represented numerically. Modern computers have billions or even trillions of bytes of memory.

The CPU contains a special set of memory cells called registers that can be read and written to much more rapidly than the main memory area. There are typically between two and one hundred registers depending on the type of CPU. Registers are used for the most frequently needed data items to avoid having to access main memory every time data is needed. As data is constantly being worked on, reducing the need to access main memory (which is often slow compared to the ALU and control units) greatly increases the computer's speed.

Computer main memory comes in two principal varieties:

    random-access memory or RAM
    read-only memory or ROM

RAM can be read and written to anytime the CPU commands it, but ROM is preloaded with data and software that never changes, therefore the CPU can only read from it. ROM is typically used to store the computer's initial start-up instructions. In general, the contents of RAM are erased when the power to the computer is turned off, but ROM retains its data indefinitely. In a PC, the ROM contains a specialized program called the BIOS that orchestrates loading the computer's operating system from the hard disk drive into RAM whenever the computer is turned on or reset. In embedded computers, which frequently do not have disk drives, all of the required software may be stored in ROM. Software stored in ROM is often called firmware, because it is notionally more like hardware than software. Flash memory blurs the distinction between ROM and RAM, as it retains its data when turned off but is also rewritable. It is typically much slower than conventional ROM and RAM however, so its use is restricted to applications where high speed is unnecessary.[67]

In more sophisticated computers there may be one or more RAM cache memories, which are slower than registers but faster than main memory. Generally computers with this sort of cache are designed to move frequently needed data into the cache automatically, often without the need for any intervention on the programmer's part.
Input/output (I/O)
Main article: Input/output
Hard disk drives are common storage devices used with computers.

I/O is the means by which a computer exchanges information with the outside world.[68] Devices that provide input or output to the computer are called peripherals.[69] On a typical personal computer, peripherals include input devices like the keyboard and mouse, and output devices such as the display and printer. Hard disk drives, floppy disk drives and optical disc drives serve as both input and output devices. Computer networking is another form of I/O. I/O devices are often complex computers in their own right, with their own CPU and memory. A graphics processing unit might contain fifty or more tiny computers that perform the calculations necessary to display 3D graphics.[citation needed] Modern desktop computers contain many smaller computers that assist the main CPU in performing I/O. A 2016-era flat screen display contains its own computer circuitry.
Multitasking
Main article: Computer multitasking

While a computer may be viewed as running one gigantic program stored in its main memory, in some systems it is necessary to give the appearance of running several programs simultaneously. This is achieved by multitasking i.e. having the computer switch rapidly between running each program in turn.[70] One means by which this is done is with a special signal called an interrupt, which can periodically cause the computer to stop executing instructions where it was and do something else instead. By remembering where it was executing prior to the interrupt, the computer can return to that task later. If several programs are running "at the same time". then the interrupt generator might be causing several hundred interrupts per second, causing a program switch each time. Since modern computers typically execute instructions several orders of magnitude faster than human perception, it may appear that many programs are running at the same time even though only one is ever executing in any given instant. This method of multitasking is sometimes termed "time-sharing" since each program is allocated a "slice" of time in turn.[71]

Before the era of inexpensive computers, the principal use for multitasking was to allow many people to share the same computer. Seemingly, multitasking would cause a computer that is switching between several programs to run more slowly, in direct proportion to the number of programs it is running, but most programs spend much of their time waiting for slow input/output devices to complete their tasks. If a program is waiting for the user to click on the mouse or press a key on the keyboard, then it will not take a "time slice" until the event it is waiting for has occurred. This frees up time for other programs to execute so that many programs may be run simultaneously without unacceptable speed loss.
Multiprocessing
Main article: Multiprocessing
Cray designed many supercomputers that used multiprocessing heavily.

Some computers are designed to distribute their work across several CPUs in a multiprocessing configuration, a technique once employed only in large and powerful machines such as supercomputers, mainframe computers and servers. Multiprocessor and multi-core (multiple CPUs on a single integrated circuit) personal and laptop computers are now widely available, and are being increasingly used in lower-end markets as a result.

Supercomputers in particular often have highly unique architectures that differ significantly from the basic stored-program architecture and from general purpose computers.[72] They often feature thousands of CPUs, customized high-speed interconnects, and specialized computing hardware. Such designs tend to be useful only for specialized tasks due to the large scale of program organization required to successfully utilize most of the available resources at once. Supercomputers usually see usage in large-scale simulation, graphics rendering, and cryptography applications, as well as with other so-called "embarrassingly parallel" tasks.
Software
Main article: Computer software

Software refers to parts of the computer which do not have a material form, such as programs, data, protocols, etc. Software is that part of a computer system that consists of encoded information or computer instructions, in contrast to the physical hardware from which the system is built. Computer software includes computer programs, libraries and related non-executable data, such as online documentation or digital media. It is often divided into system software and application software]] Computer hardware and software require each other and neither can be realistically used on its own. When software is stored in hardware that cannot easily be modified, such as with BIOS ROM in an IBM PC compatible computer, it is sometimes called "firmware".
Operating system /System Software 	Unix and BSD 	UNIX System V, IBM AIX, HP-UX, Solaris (SunOS), IRIX, List of BSD operating systems
GNU/Linux 	List of Linux distributions, Comparison of Linux distributions
Microsoft Windows 	Windows 95, Windows 98, Windows NT, Windows 2000, Windows ME, Windows XP, Windows Vista, Windows 7, Windows 8, Windows 8.1, Windows 10
DOS 	86-DOS (QDOS), IBM PC DOS, MS-DOS, DR-DOS, FreeDOS
Macintosh operating systems 	Classic Mac OS, macOS (previously OS X and Mac OS X)
Embedded and real-time 	List of embedded operating systems
Experimental 	Amoeba, Oberon/Bluebottle, Plan 9 from Bell Labs
Library 	Multimedia 	DirectX, OpenGL, OpenAL, Vulkan (API)
Programming library 	C standard library, Standard Template Library
Data 	Protocol 	TCP/IP, Kermit, FTP, HTTP, SMTP
File format 	HTML, XML, JPEG, MPEG, PNG
User interface 	Graphical user interface (WIMP) 	Microsoft Windows, GNOME, KDE, QNX Photon, CDE, GEM, Aqua
Text-based user interface 	Command-line interface, Text user interface
Application Software 	Office suite 	Word processing, Desktop publishing, Presentation program, Database management system, Scheduling & Time management, Spreadsheet, Accounting software
Internet Access 	Browser, Email client, Web server, Mail transfer agent, Instant messaging
Design and manufacturing 	Computer-aided design, Computer-aided manufacturing, Plant management, Robotic manufacturing, Supply chain management
Graphics 	Raster graphics editor, Vector graphics editor, 3D modeler, Animation editor, 3D computer graphics, Video editing, Image processing
Audio 	Digital audio editor, Audio playback, Mixing, Audio synthesis, Computer music
Software engineering 	Compiler, Assembler, Interpreter, Debugger, Text editor, Integrated development environment, Software performance analysis, Revision control, Software configuration management
Educational 	Edutainment, Educational game, Serious game, Flight simulator
Games 	Strategy, Arcade, Puzzle, Simulation, First-person shooter, Platform, Massively multiplayer, Interactive fiction
Misc 	Artificial intelligence, Antivirus software, Malware scanner, Installer/Package management systems, File manager
Languages

There are thousands of different programming languages—some intended to be general purpose, others useful only for highly specialized applications.
Programming languages Lists of programming languages 	Timeline of programming languages, List of programming languages by category, Generational list of programming languages, List of programming languages, Non-English-based programming languages
Commonly used assembly languages 	ARM, MIPS, x86
Commonly used high-level programming languages 	Ada, BASIC, C, C++, C#, COBOL, Fortran, PL/1, REXX, Java, Lisp, Pascal, Object Pascal
Commonly used scripting languages 	Bourne script, JavaScript, Python, Ruby, PHP, Perl
Application Software
Programs

The defining feature of modern computers which distinguishes them from all other machines is that they can be programmed. That is to say that some type of instructions (the program) can be given to the computer, and it will process them. Modern computers based on the von Neumann architecture often have machine code in the form of an imperative programming language. In practical terms, a computer program may be just a few instructions or extend to many millions of instructions, as do the programs for word processors and web browsers for example. A typical modern computer can execute billions of instructions per second (gigaflops) and rarely makes a mistake over many years of operation. Large computer programs consisting of several million instructions may take teams of programmers years to write, and due to the complexity of the task almost certainly contain errors.
Stored program architecture
Main articles: Computer program and Computer programming
Replica of the Manchester Baby, the world's first electronic stored-program computer, at the Museum of Science and Industry in Manchester, England

This section applies to most common RAM machine–based computers.

In most cases, computer instructions are simple: add one number to another, move some data from one location to another, send a message to some external device, etc. These instructions are read from the computer's memory and are generally carried out (executed) in the order they were given. However, there are usually specialized instructions to tell the computer to jump ahead or backwards to some other place in the program and to carry on executing from there. These are called "jump" instructions (or branches). Furthermore, jump instructions may be made to happen conditionally so that different sequences of instructions may be used depending on the result of some previous calculation or some external event. Many computers directly support subroutines by providing a type of jump that "remembers" the location it jumped from and another instruction to return to the instruction following that jump instruction.

Program execution might be likened to reading a book. While a person will normally read each word and line in sequence, they may at times jump back to an earlier place in the text or skip sections that are not of interest. Similarly, a computer may sometimes go back and repeat the instructions in some section of the program over and over again until some internal condition is met. This is called the flow of control within the program and it is what allows the computer to perform tasks repeatedly without human intervention.

Comparatively, a person using a pocket calculator can perform a basic arithmetic operation such as adding two numbers with just a few button presses. But to add together all of the numbers from 1 to 1,000 would take thousands of button presses and a lot of time, with a near certainty of making a mistake. On the other hand, a computer may be programmed to do this with just a few simple instructions. The following example is written in the MIPS assembly language:

  begin:
  addi $8, $0, 0           # initialize sum to 0
  addi $9, $0, 1           # set first number to add = 1
  loop:
  slti $10, $9, 1000       # check if the number is less than 1000
  beq $10, $0, finish      # if odd number is greater than n then exit
  add $8, $8, $9           # update sum
  addi $9, $9, 1           # get next number
  j loop                   # repeat the summing process
  finish:
  add $2, $8, $0           # put sum in output register

Once told to run this program, the computer will perform the repetitive addition task without further human intervention. It will almost never make a mistake and a modern PC can complete the task in a fraction of a second.
Machine code

In most computers, individual instructions are stored as machine code with each instruction being given a unique number (its operation code or opcode for short). The command to add two numbers together would have one opcode; the command to multiply them would have a different opcode, and so on. The simplest computers are able to perform any of a handful of different instructions; the more complex computers have several hundred to choose from, each with a unique numerical code. Since the computer's memory is able to store numbers, it can also store the instruction codes. This leads to the important fact that entire programs (which are just lists of these instructions) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data. The fundamental concept of storing programs in the computer's memory alongside the data they operate on is the crux of the von Neumann, or stored program[citation needed], architecture. In some cases, a computer might store some or all of its program in memory that is kept separate from the data it operates on. This is called the Harvard architecture after the Harvard Mark I computer. Modern von Neumann computers display some traits of the Harvard architecture in their designs, such as in CPU caches.

While it is possible to write computer programs as long lists of numbers (machine language) and while this technique was used with many early computers,[73] it is extremely tedious and potentially error-prone to do so in practice, especially for complicated programs. Instead, each basic instruction can be given a short name that is indicative of its function and easy to remember – a mnemonic such as ADD, SUB, MULT or JUMP. These mnemonics are collectively known as a computer's assembly language. Converting programs written in assembly language into something the computer can actually understand (machine language) is usually done by a computer program called an assembler.
A 1970s punched card containing one line from a Fortran program. The card reads: "Z(1) = Y + W(1)" and is labeled "PROJ039" for identification purposes.
Programming language
Main article: Programming language

Programming languages provide various ways of specifying programs for computers to run. Unlike natural languages, programming languages are designed to permit no ambiguity and to be concise. They are purely written languages and are often difficult to read aloud. They are generally either translated into machine code by a compiler or an assembler before being run, or translated directly at run time by an interpreter. Sometimes programs are executed by a hybrid method of the two techniques.
Low-level languages
Main article: Low-level programming language

Machine languages and the assembly languages that represent them (collectively termed low-level programming languages) tend to be unique to a particular type of computer. For instance, an ARM architecture computer (such as may be found in a smartphone or a hand-held videogame) cannot understand the machine language of an x86 CPU that might be in a PC.[74]
High-level languages/third generation language
Main article: High-level programming language

Although considerably easier than in machine language, writing long programs in assembly language is often difficult and is also error prone. Therefore, most practical programs are written in more abstract high-level programming languages that are able to express the needs of the programmer more conveniently (and thereby help reduce programmer error). High level languages are usually "compiled" into machine language (or sometimes into assembly language and then into machine language) using another computer program called a compiler.[75] High level languages are less related to the workings of the target computer than assembly language, and more related to the language and structure of the problem(s) to be solved by the final program. It is therefore often possible to use different compilers to translate the same high level language program into the machine language of many different types of computer. This is part of the means by which software like video games may be made available for different computer architectures such as personal computers and various video game consoles.
Fourth-generation languages
Main article: Fourth-generation programming language

Fourth-generation languages (4GL) are less procedural than 3G languages. The benefit of 4GL is that they provide ways to obtain information without requiring the direct help of a programmer.
Program design

This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. (July 2012) (Learn how and when to remove this template message)

Program design of small programs is relatively simple and involves the analysis of the problem, collection of inputs, using the programming constructs within languages, devising or using established procedures and algorithms, providing data for output devices and solutions to the problem as applicable. As problems become larger and more complex, features such as subprograms, modules, formal documentation, and new paradigms such as object-oriented programming are encountered. Large programs involving thousands of line of code and more require formal software methodologies. The task of developing large software systems presents a significant intellectual challenge. Producing software with an acceptably high reliability within a predictable schedule and budget has historically been difficult; the academic and professional discipline of software engineering concentrates specifically on this challenge.
Bugs
Main article: Software bug
The actual first computer bug, a moth found trapped on a relay of the Harvard Mark II computer

Errors in computer programs are called "bugs". They may be benign and not affect the usefulness of the program, or have only subtle effects. But in some cases, they may cause the program or the entire system to "hang", becoming unresponsive to input such as mouse clicks or keystrokes, to completely fail, or to crash. Otherwise benign bugs may sometimes be harnessed for malicious intent by an unscrupulous user writing an exploit, code designed to take advantage of a bug and disrupt a computer's proper execution. Bugs are usually not the fault of the computer. Since computers merely execute the instructions they are given, bugs are nearly always the result of programmer error or an oversight made in the program's design.[76] Admiral Grace Hopper, an American computer scientist and developer of the first compiler, is credited for having first used the term "bugs" in computing after a dead moth was found shorting a relay in the Harvard Mark II computer in September 1947.[77]
Firmware

Firmware is the technology which has the combination of both hardware and software such as BIOS chip inside a computer. This chip (hardware) is located on the motherboard and has the BIOS set up (software) stored in it.
Networking and the Internet
Main articles: Computer networking and Internet
Visualization of a portion of the routes on the Internet

Computers have been used to coordinate information between multiple locations since the 1950s. The U.S. military's SAGE system was the first large-scale example of such a system, which led to a number of special-purpose commercial systems such as Sabre.[78] In the 1970s, computer engineers at research institutions throughout the United States began to link their computers together using telecommunications technology. The effort was funded by ARPA (now DARPA), and the computer network that resulted was called the ARPANET.[79] The technologies that made the Arpanet possible spread and evolved.

In time, the network spread beyond academic and military institutions and became known as the Internet. The emergence of networking involved a redefinition of the nature and boundaries of the computer. Computer operating systems and applications were modified to include the ability to define and access the resources of other computers on the network, such as peripheral devices, stored information, and the like, as extensions of the resources of an individual computer. Initially these facilities were available primarily to people working in high-tech environments, but in the 1990s the spread of applications like e-mail and the World Wide Web, combined with the development of cheap, fast networking technologies like Ethernet and ADSL saw computer networking become almost ubiquitous. In fact, the number of computers that are networked is growing phenomenally. A very large proportion of personal computers regularly connect to the Internet to communicate and receive information. "Wireless" networking, often utilizing mobile phone networks, has meant networking is becoming increasingly ubiquitous even in mobile computing environments.
Unconventional computers
Main article: Human computer
See also: Harvard Computers

A computer does not need to be electronic, nor even have a processor, nor RAM, nor even a hard disk. While popular usage of the word "computer" is synonymous with a personal electronic computer, the modern[80] definition of a computer is literally: "A device that computes, especially a programmable [usually] electronic machine that performs high-speed mathematical or logical operations or that assembles, stores, correlates, or otherwise processes information."[81] Any device which processes information qualifies as a computer, especially if the processing is purposeful.[citation needed]
Unconventional computing
Further information: Unconventional computing

Historically, computers evolved from mechanical computers and eventually from vacuum tubes to transistors. However, conceptually computational systems as flexible as a personal computer can be built out of almost anything. For example, a computer can be made out of billiard balls (billiard ball computer); an often quoted example.[citation needed] More realistically, modern computers are made out of transistors made of photolithographed semiconductors.
Future

There is active research to make computers out of many promising new types of technology, such as optical computers, DNA computers, neural computers, and quantum computers. Most computers are universal, and are able to calculate any computable function, and are limited only by their memory capacity and operating speed. However different designs of computers can give very different performance for particular problems; for example quantum computers can potentially break some modern encryption algorithms (by quantum factoring) very quickly.
Computer architecture paradigms

There are many types of computer architectures:

    Quantum computer vs. Chemical computer
    Scalar processor vs. Vector processor
    Non-Uniform Memory Access (NUMA) computers
    Register machine vs. Stack machine
    Harvard architecture vs. von Neumann architecture
    Cellular architecture

Of all these abstract machines, a quantum computer holds the most promise for revolutionizing computing.[82] Logic gates are a common abstraction which can apply to most of the above digital or analog paradigms. The ability to store and execute lists of instructions called programs makes computers extremely versatile, distinguishing them from calculators. The Church–Turing thesis is a mathematical statement of this versatility: any computer with a minimum capability (being Turing-complete) is, in principle, capable of performing the same tasks that any other computer can perform. Therefore, any type of computer (netbook, supercomputer, cellular automaton, etc.) is able to perform the same computational tasks, given enough time and storage capacity.
Artificial intelligence

A computer will solve problems in exactly the way it is programmed to, without regard to efficiency, alternative solutions, possible shortcuts, or possible errors in the code. Computer programs that learn and adapt are part of the emerging field of artificial intelligence and machine learning. Artificial intelligence based products generally fall into two major categories: rule based systems and pattern recognition systems. Rule based systems attempt to represent the rules used by human experts and tend to be expensive to develop. Pattern based systems use data about a problem to generate conclusions. Examples of pattern based systems include voice recognition, font recognition, translation and the emerging field of on-line marketing.

Flower
From Wikipedia, the free encyclopedia
Jump to navigation
Jump to search
For other uses, see Flower (disambiguation).
"Floral" redirects here. For other uses, see Floral (disambiguation).
A poster with flowers or clusters of flowers produced by twelve species of flowering plants from different families.
Flowers in the Netherlands.

A flower, sometimes known as a bloom or blossom, is the reproductive structure found in flowering plants (plants of the division Magnoliophyta, also called angiosperms). The biological function of a flower is to effect reproduction, usually by providing a mechanism for the union of sperm with eggs. Flowers may facilitate outcrossing (fusion of sperm and eggs from different individuals in a population) or allow selfing (fusion of sperm and egg from the same flower). Some flowers produce diaspores without fertilization (parthenocarpy). Flowers contain sporangia and are the site where gametophytes develop. Many flowers have evolved to be attractive to animals, so as to cause them to be vectors for the transfer of pollen. After fertilization, the ovary of the flower develops into fruit containing seeds.

In addition to facilitating the reproduction of flowering plants, flowers have long been admired and used by humans to bring beauty to their environment, and also as objects of romance, ritual, religion, medicine and as a source of food.
Contents

    1 Morphology
        1.1 Floral parts
            1.1.1 Perianth
            1.1.2 Reproductive
        1.2 Structure
            1.2.1 Inflorescence
            1.2.2 Floral diagrams and floral formulae
    2 Development
        2.1 Flowering transition
        2.2 Organ development
    3 Floral function
        3.1 Flower specialization and pollination
    4 Pollination
        4.1 Pollination mechanism
        4.2 Attraction methods
        4.3 Flower-pollinator relationships
        4.4 Pollen allergy
    5 Seed dispersal
    6 Evolution
    7 Color
    8 Symbolism
    9 Usage
    10 See also
    11 References
    12 Further reading
    13 External links

Morphology

Main parts of a mature flower (Ranunculus glaberrimus).
Diagram of flower parts.
Floral parts

The essential parts of a flower can be considered in two parts: the vegetative part, consisting of petals and associated structures in the perianth, and the reproductive or sexual parts. A stereotypical flower consists of four kinds of structures attached to the tip of a short stalk. Each of these kinds of parts is arranged in a whorl on the receptacle. The four main whorls (starting from the base of the flower or lowest node and working upwards) are as follows:
Perianth
Main articles: Perianth, Sepal, and Corolla (flower)

Collectively the calyx and corolla form the perianth (see diagram).

    Calyx: the outermost whorl consisting of units called sepals; these are typically green and enclose the rest of the flower in the bud stage, however, they can be absent or prominent and petal-like in some species.
    Corolla: the next whorl toward the apex, composed of units called petals, which are typically thin, soft and colored to attract animals that help the process of pollination.

Reproductive
Main articles: Plant reproductive morphology, Androecium, and Gynoecium
Reproductive parts of Easter Lily (Lilium longiflorum). 1. Stigma, 2. Style, 3. Stamens, 4. Filament, 5. Petal

    Androecium (from Greek andros oikia: man's house): the next whorl (sometimes multiplied into several whorls), consisting of units called stamens. Stamens consist of two parts: a stalk called a filament, topped by an anther where pollen is produced by meiosis and eventually dispersed.
    Gynoecium (from Greek gynaikos oikia: woman's house): the innermost whorl of a flower, consisting of one or more units called carpels. The carpel or multiple fused carpels form a hollow structure called an ovary, which produces ovules internally. Ovules are megasporangia and they in turn produce megaspores by meiosis which develop into female gametophytes. These give rise to egg cells. The gynoecium of a flower is also described using an alternative terminology wherein the structure one sees in the innermost whorl (consisting of an ovary, style and stigma) is called a pistil. A pistil may consist of a single carpel or a number of carpels fused together. The sticky tip of the pistil, the stigma, is the receptor of pollen. The supportive stalk, the style, becomes the pathway for pollen tubes to grow from pollen grains adhering to the stigma. The relationship to the gynoecium on the receptacle is described as hypogynous (beneath a superior ovary), perigynous (surrounding a superior ovary), or epigynous (above inferior ovary).

Structure

Although the arrangement described above is considered "typical", plant species show a wide variation in floral structure.[1] These modifications have significance in the evolution of flowering plants and are used extensively by botanists to establish relationships among plant species.

The four main parts of a flower are generally defined by their positions on the receptacle and not by their function. Many flowers lack some parts or parts may be modified into other functions and/or look like what is typically another part. In some families, like Ranunculaceae, the petals are greatly reduced and in many species the sepals are colorful and petal-like. Other flowers have modified stamens that are petal-like; the double flowers of Peonies and Roses are mostly petaloid stamens.[2] Flowers show great variation and plant scientists describe this variation in a systematic way to identify and distinguish species.

Specific terminology is used to describe flowers and their parts. Many flower parts are fused together; fused parts originating from the same whorl are connate, while fused parts originating from different whorls are adnate; parts that are not fused are free. When petals are fused into a tube or ring that falls away as a single unit, they are sympetalous (also called gamopetalous). Connate petals may have distinctive regions: the cylindrical base is the tube, the expanding region is the throat and the flaring outer region is the limb. A sympetalous flower, with bilateral symmetry with an upper and lower lip, is bilabiate. Flowers with connate petals or sepals may have various shaped corolla or calyx, including campanulate, funnelform, tubular, urceolate, salverform or rotate.

Referring to "fusion," as it is commonly done, appears questionable because at least some of the processes involved may be non-fusion processes. For example, the addition of intercalary growth at or below the base of the primordia of floral appendages such as sepals, petals, stamens and carpels may lead to a common base that is not the result of fusion.[3][4][5]
Left: A normal zygomorphic Streptocarpus flower. Right: An aberrant peloric Streptocarpus flower. Both of these flowers appeared on the Streptocarpus hybrid 'Anderson's Crows' Wings'.

Many flowers have a symmetry. When the perianth is bisected through the central axis from any point and symmetrical halves are produced, the flower is said to be actinomorphic or regular, e.g. rose or trillium. This is an example of radial symmetry. When flowers are bisected and produce only one line that produces symmetrical halves, the flower is said to be irregular or zygomorphic, e.g. snapdragon or most orchids.

Flowers may be directly attached to the plant at their base (sessile—the supporting stalk or stem is highly reduced or absent). The stem or stalk subtending a flower is called a peduncle. If a peduncle supports more than one flower, the stems connecting each flower to the main axis are called pedicels. The apex of a flowering stem forms a terminal swelling which is called the torus or receptacle.
Inflorescence
The familiar calla lily is not a single flower. It is actually an inflorescence of tiny flowers pressed together on a central stalk that is surrounded by a large petal-like bract.
Main article: Inflorescence

In those species that have more than one flower on an axis, the collective cluster of flowers is termed an inflorescence. Some inflorescences are composed of many small flowers arranged in a formation that resembles a single flower. The common example of this is most members of the very large composite (Asteraceae) group. A single daisy or sunflower, for example, is not a flower but a flower head—an inflorescence composed of numerous flowers (or florets). An inflorescence may include specialized stems and modified leaves known as bracts.
Floral diagrams and floral formulae
Main articles: Floral formula and Floral diagram

A floral formula is a way to represent the structure of a flower using specific letters, numbers and symbols, presenting substantial information about the flower in a compact form. It can represent a taxon, usually giving ranges of the numbers of different organs, or particular species. Floral formulae have been developed in the early 19th century and their use has declined since. Prenner et al. (2010) devised an extension of the existing model to broaden the descriptive capability of the formula.[6] The format of floral formulae differs in different parts of the world, yet they convey the same information.[7][8][9][10]

The structure of a flower can also be expressed by the means of floral diagrams. The use of schematic diagrams can replace long descriptions or complicated drawings as a tool for understanding both floral structure and evolution. Such diagrams may show important features of flowers, including the relative positions of the various organs, including the presence of fusion and symmetry, as well as structural details.[7]
Development

A flower develops on a modified shoot or axis from a determinate apical meristem (determinate meaning the axis grows to a set size). It has compressed internodes, bearing structures that in classical plant morphology are interpreted as highly modified leaves.[11] Detailed developmental studies, however, have shown that stamens are often initiated more or less like modified stems (caulomes) that in some cases may even resemble branchlets.[5][1] Taking into account the whole diversity in the development of the androecium of flowering plants, we find a continuum between modified leaves (phyllomes), modified stems (caulomes), and modified branchlets (shoots).[12][13]
Flowering transition

The transition to flowering is one of the major phase changes that a plant makes during its life cycle. The transition must take place at a time that is favorable for fertilization and the formation of seeds, hence ensuring maximal reproductive success. To meet these needs a plant is able to interpret important endogenous and environmental cues such as changes in levels of plant hormones and seasonable temperature and photoperiod changes.[14] Many perennial and most biennial plants require vernalization to flower. The molecular interpretation of these signals is through the transmission of a complex signal known as florigen, which involves a variety of genes, including CONSTANS, FLOWERING LOCUS C and FLOWERING LOCUS T. Florigen is produced in the leaves in reproductively favorable conditions and acts in buds and growing tips to induce a number of different physiological and morphological changes.[15]

The first step of the transition is the transformation of the vegetative stem primordia into floral primordia. This occurs as biochemical changes take place to change cellular differentiation of leaf, bud and stem tissues into tissue that will grow into the reproductive organs. Growth of the central part of the stem tip stops or flattens out and the sides develop protuberances in a whorled or spiral fashion around the outside of the stem end. These protuberances develop into the sepals, petals, stamens, and carpels. Once this process begins, in most plants, it cannot be reversed and the stems develop flowers, even if the initial start of the flower formation event was dependent of some environmental cue.[16] Once the process begins, even if that cue is removed the stem will continue to develop a flower.

Yvonne Aitken has shown that flowering transition depends on a number of factors, and that plants flowering earliest under given conditions had the least dependence on climate whereas later-flowering varieties reacted strongly to the climate setup.
Organ development
Main article: ABC model of flower development
The ABC model of flower development

The molecular control of floral organ identity determination appears to be fairly well understood in some species. In a simple model, three gene activities interact in a combinatorial manner to determine the developmental identities of the organ primordia within the floral meristem. These gene functions are called A, B and C-gene functions. In the first floral whorl only A-genes are expressed, leading to the formation of sepals. In the second whorl both A- and B-genes are expressed, leading to the formation of petals. In the third whorl, B and C genes interact to form stamens and in the center of the flower C-genes alone give rise to carpels. The model is based upon studies of mutants in Arabidopsis thaliana and snapdragon, Antirrhinum majus. For example, when there is a loss of B-gene function, mutant flowers are produced with sepals in the first whorl as usual, but also in the second whorl instead of the normal petal formation. In the third whorl the lack of B function but presence of C-function mimics the fourth whorl, leading to the formation of carpels also in the third whorl.

Most genes central in this model belong to the MADS-box genes and are transcription factors that regulate the expression of the genes specific for each floral organ.
Floral function
See also: Plant reproductive morphology
A "perfect flower", this Crateva religiosa flower has both stamens (outer ring) and a pistil (center).

The principal purpose of a flower is the reproduction of the individual and the species. All flowering plants are heterosporous, producing two types of spores. Microspores are produced by meiosis inside anthers while megaspores are produced inside ovules, inside an ovary. In fact, anthers typically consist of four microsporangia and an ovule is an integumented megasporangium. Both types of spores develop into gametophytes inside sporangia. As with all heterosporous plants, the gametophytes also develop inside the spores (are endosporic).

In the majority of species, individual flowers have both functional carpels and stamens. Botanists describe these flowers as being perfect or bisexual and the species as hermaphroditic. Some flowers lack one or the other reproductive organ and called imperfect or unisexual. If unisex flowers are found on the same individual plant but in different locations, the species is said to be monoecious. If each type of unisex flower is found only on separate individuals, the plant is dioecious.
Flower specialization and pollination
Further information: Pollination syndrome

Flowering plants usually face selective pressure to optimize the transfer of their pollen, and this is typically reflected in the morphology of the flowers and the behaviour of the plants. Pollen may be transferred between plants via a number of 'vectors'. Some plants make use of abiotic vectors — namely wind (anemophily) or, much less commonly, water (hydrophily). Others use biotic vectors including insects (entomophily), birds (ornithophily), bats (chiropterophily) or other animals. Some plants make use of multiple vectors, but many are highly specialised.

Cleistogamous flowers are self-pollinated, after which they may or may not open. Many Viola and some Salvia species are known to have these types of flowers.

The flowers of plants that make use of biotic pollen vectors commonly have glands called nectaries that act as an incentive for animals to visit the flower. Some flowers have patterns, called nectar guides, that show pollinators where to look for nectar. Flowers also attract pollinators by scent and color. Still other flowers use mimicry to attract pollinators. Some species of orchids, for example, produce flowers resembling female bees in color, shape, and scent. Flowers are also specialized in shape and have an arrangement of the stamens that ensures that pollen grains are transferred to the bodies of the pollinator when it lands in search of its attractant (such as nectar, pollen, or a mate). In pursuing this attractant from many flowers of the same species, the pollinator transfers pollen to the stigmas—arranged with equally pointed precision—of all of the flowers it visits.

Anemophilous flowers use the wind to move pollen from one flower to the next. Examples include grasses, birch trees, ragweed and maples. They have no need to attract pollinators and therefore tend not to be "showy" flowers. Male and female reproductive organs are generally found in separate flowers, the male flowers having a number of long filaments terminating in exposed stamens, and the female flowers having long, feather-like stigmas. Whereas the pollen of animal-pollinated flowers tends to be large-grained, sticky, and rich in protein (another "reward" for pollinators), anemophilous flower pollen is usually small-grained, very light, and of little nutritional value to animals.
Pollination
Main article: Pollination
Grains of pollen sticking to this bee will be transferred to the next flower it visits

The primary purpose of a flower is reproduction. Since the flowers are the reproductive organs of plant, they mediate the joining of the sperm, contained within pollen, to the ovules — contained in the ovary. Pollination is the movement of pollen from the anthers to the stigma. The joining of the sperm to the ovules is called fertilization. Normally pollen is moved from one plant to another, but many plants are able to self pollinate. The fertilized ovules produce seeds that are the next generation. Sexual reproduction produces genetically unique offspring, allowing for adaptation. Flowers have specific designs which encourages the transfer of pollen from one plant to another of the same species. Many plants are dependent upon external factors for pollination, including: wind and animals, and especially insects. Even large animals such as birds, bats, and pygmy possums can be employed. The period of time during which this process can take place (the flower is fully expanded and functional) is called anthesis. The study of pollination by insects is called anthecology.
Pollination mechanism

The pollination mechanism employed by a plant depends on what method of pollination is utilized.

Most flowers can be divided between two broad groups of pollination methods:

Entomophilous: flowers attract and use insects, bats, birds or other animals to transfer pollen from one flower to the next. Often they are specialized in shape and have an arrangement of the stamens that ensures that pollen grains are transferred to the bodies of the pollinator when it lands in search of its attractant (such as nectar, pollen, or a mate). In pursuing this attractant from many flowers of the same species, the pollinator transfers pollen to the stigmas—arranged with equally pointed precision—of all of the flowers it visits. Many flowers rely on simple proximity between flower parts to ensure pollination. Others, such as the Sarracenia or lady-slipper orchids, have elaborate designs to ensure pollination while preventing self-pollination.
Grass flower with vestigial perianth or lodicules

Anemophilous: flowers use the wind to move pollen from one flower to the next, examples include the grasses, Birch trees, Ragweed and Maples. They have no need to attract pollinators and therefore tend not to grow large blossoms. Whereas the pollen of entomophilous flowers tends to be large-grained, sticky, and rich in protein (another "reward" for pollinators), anemophilous flower pollen is usually small-grained, very light, and of little nutritional value to insects, though it may still be gathered in times of dearth. Honeybees and bumblebees actively gather anemophilous corn (maize) pollen, though it is of little value to them.

Some flowers with both stamens and a pistil are capable of self-fertilization, which does increase the chance of producing seeds but limits genetic variation. The extreme case of self-fertilization occurs in flowers that always self-fertilize, such as many dandelions. Some flowers are self-pollinated and use flowers that never open or are self-pollinated before the flowers open, these flowers are called cleistogamous. Many Viola species and some Salvia have these types of flowers. Conversely, many species of plants have ways of preventing self-fertilization. Unisexual male and female flowers on the same plant may not appear or mature at the same time, or pollen from the same plant may be incapable of fertilizing its ovules. The latter flower types, which have chemical barriers to their own pollen, are referred to as self-sterile or self-incompatible.
Attraction methods
A Bee orchid has evolved over many generations to better mimic a female bee to attract male bees as pollinators.

Plants cannot move from one location to another, thus many flowers have evolved to attract animals to transfer pollen between individuals in dispersed populations. Flowers that are insect-pollinated are called entomophilous; literally "insect-loving" in Greek. They can be highly modified along with the pollinating insects by co-evolution. Flowers commonly have glands called nectaries on various parts that attract animals looking for nutritious nectar. Birds and bees have color vision, enabling them to seek out "colorful" flowers.

Some flowers have patterns, called nectar guides, that show pollinators where to look for nectar; they may be visible only under ultraviolet light, which is visible to bees and some other insects. Flowers also attract pollinators by scent and some of those scents are pleasant to our sense of smell. Not all flower scents are appealing to humans; a number of flowers are pollinated by insects that are attracted to rotten flesh and have flowers that smell like dead animals, often called Carrion flowers, including Rafflesia, the titan arum, and the North American pawpaw (Asimina triloba). Flowers pollinated by night visitors, including bats and moths, are likely to concentrate on scent to attract pollinators and most such flowers are white.

Other flowers use mimicry to attract pollinators. Some species of orchids, for example, produce flowers resembling female bees in color, shape, and scent. Male bees move from one such flower to another in search of a mate.
Flower-pollinator relationships

Many flowers have close relationships with one or a few specific pollinating organisms. Many flowers, for example, attract only one specific species of insect, and therefore rely on that insect for successful reproduction. This close relationship is often given as an example of coevolution, as the flower and pollinator are thought to have developed together over a long period of time to match each other's needs.

This close relationship compounds the negative effects of extinction. The extinction of either member in such a relationship would mean almost certain extinction of the other member as well. Some endangered plant species are so because of shrinking pollinator populations.
Pollen allergy

There is much confusion about the role of flowers in allergies. For example, the showy and entomophilous goldenrod (Solidago) is frequently blamed for respiratory allergies, of which it is innocent, since its pollen cannot be airborne. The types of pollen that most commonly cause allergic reactions are produced by the plain-looking plants (trees, grasses, and weeds) that do not have showy flowers. These plants make small, light, dry pollen grains that are custom-made for wind transport.

The type of allergens in the pollen is the main factor that determines whether the pollen is likely to cause hay fever. For example, pine tree pollen is produced in large amounts by a common tree, which would make it a good candidate for causing allergy. It is, however, a relatively rare cause of allergy because the types of allergens in pine pollen appear to make it less allergenic. Instead the allergen is usually the pollen of the contemporary bloom of anemophilous ragweed (Ambrosia), which can drift for many miles. Scientists have collected samples of ragweed pollen 400 miles out at sea and 2 miles high in the air.[17] A single ragweed plant can generate a million grains of pollen per day.[18]

Among North American plants, weeds are the most prolific producers of allergenic pollen.[19] Ragweed is the major culprit, but other important sources are sagebrush, redroot pigweed, lamb's quarters, Russian thistle (tumbleweed), and English plantain.

It is common to hear people say they are allergic to colorful or scented flowers like roses. In fact, only florists, gardeners, and others who have prolonged, close contact with flowers are likely to be sensitive to pollen from these plants. Most people have little contact with the large, heavy, waxy pollen grains of such flowering plants because this type of pollen is not carried by wind but by insects such as butterflies and bees.
Seed dispersal
Main article: Biological dispersal
Evolution
Life timeline
view • discuss • edit
-4500 —
–
-4000 —
–
-3500 —
–
-3000 —
–
-2500 —
–
-2000 —
–
-1500 —
–
-1000 —
–
-500 —
–
0 —
water
Single-celled
life
photosynthesis
Eukaryotes
Multicellular
life
Arthropods   Molluscs
Plants
Dinosaurs
Mammals
Flowers
Birds
Primates
←
Earth (−4540)
←
Earliest water
←
Earliest life
←
Earliest oxygen
←
Atmospheric oxygen
←
Oxygen crisis
←
Sexual reproduction
←
Earliest plants
←
Ediacara biota
←
Cambrian explosion
←
Tetrapoda
←
Earliest apes
P
h
a
n
e
r
o
z
o
i
c







P
r
o
t
e
r
o
z
o
i
c



A
r
c
h
e
a
n
H
a
d
e
a
n
Pongola
Huronian
Cryogenian
Andean
Karoo
Quaternary
Ice_Ages
(view • discuss)
Axis scale: million years

The image above contains clickable links
Also see: Human timeline and Nature timeline
Further information: Evolution of flowers and Floral biology
Archaefructus liaoningensis, one of the earliest known flowering plants

While land plants have existed for about 425 million years, the first ones reproduced by a simple adaptation of their aquatic counterparts: spores. In the sea, plants—and some animals—can simply scatter out genetic clones of themselves to float away and grow elsewhere. This is how early plants reproduced. But plants soon evolved methods of protecting these copies to deal with drying out and other damage which is even more likely on land than in the sea. The protection became the seed, though it had not yet evolved the flower. Early seed-bearing plants include the ginkgo and conifers.

Several groups of extinct gymnosperms, particularly seed ferns, have been proposed as the ancestors of flowering plants but there is no continuous fossil evidence showing exactly how flowers evolved. The apparently sudden appearance of relatively modern flowers in the fossil record posed such a problem for the theory of evolution that it was called an "abominable mystery" by Charles Darwin. Recently discovered angiosperm fossils such as Archaefructus, along with further discoveries of fossil gymnosperms, suggest how angiosperm characteristics may have been acquired in a series of steps. An early fossil of a flowering plant, Archaefructus liaoningensis from China, is dated about 125 million years old.[20][21] Even earlier from China is the 125–130 million years old Archaefructus sinensis. Now, another plant (130 million-year-old Montsechia vidalii, discovered in Spain) takes the title of world's oldest flower from Archaefructus sinensis.[22]
Amborella trichopoda may have characteristic features of the earliest flowering plants

Recent DNA analysis (molecular systematics)[23] shows that Amborella trichopoda, found on the Pacific island of New Caledonia, is the only species in the sister group to the rest of the flowering plants, and morphological studies suggest that it has features which may have been characteristic of the earliest flowering plants.[24]

While there is only hard proof of such flowers about 140 million years ago,[25][26] there is some circumstantial evidence of flowers as much as 250 million years ago. A chemical used by plants to defend their flowers, oleanane, has been detected in fossil plants that old, including gigantopterids,[27] which evolved at that time and bear many of the traits of modern, flowering plants, though they are not known to be flowering plants themselves, because only their stems and prickles have been found preserved in detail; one of the earliest examples of petrification.

The similarity in leaf and stem structure can be very important, because flowers are genetically just an adaptation of normal leaf and stem components on plants, a combination of genes normally responsible for forming new shoots.[28] The most primitive flowers are thought to have had a variable number of flower parts, often separate from (but in contact with) each other. The flowers would have tended to grow in a spiral pattern, to be bisexual (in plants, this means both male and female parts on the same flower), and to be dominated by the ovary (female part). As flowers grew more advanced, some variations developed parts fused together, with a much more specific number and design, and with either specific sexes per flower or plant, or at least "ovary inferior".

The general assumption is that the function of flowers, from the start, was to involve animals in the reproduction process. Pollen can be scattered without bright colors and obvious shapes, which would therefore be a liability, using the plant's resources, unless they provide some other benefit. One proposed reason for the sudden, fully developed appearance of flowers is that they evolved in an isolated setting like an island, or chain of islands, where the plants bearing them were able to develop a highly specialized relationship with some specific animal (a wasp, for example), the way many island species develop today. This symbiotic relationship, with a hypothetical wasp bearing pollen from one plant to another much the way fig wasps do today, could have eventually resulted in both the plant(s) and their partners developing a high degree of specialization. Island genetics is believed to be a common source of speciation, especially when it comes to radical adaptations which seem to have required inferior transitional forms. Note that the wasp example is not incidental; bees, apparently evolved specifically for symbiotic plant relationships, are descended from wasps.

Likewise, most fruit used in plant reproduction comes from the enlargement of parts of the flower. This fruit is frequently a tool which depends upon animals wishing to eat it, and thus scattering the seeds it contains.

While many such symbiotic relationships remain too fragile to survive competition with mainland organisms, flowers proved to be an unusually effective means of production, spreading (whatever their actual origin) to become the dominant form of land plant life.

Flower evolution continues to the present day; modern flowers have been so profoundly influenced by humans that many of them cannot be pollinated in nature. Many modern, domesticated flowers used to be simple weeds, which only sprouted when the ground was disturbed. Some of them tended to grow with human crops, and the prettiest did not get plucked because of their beauty, developing a dependence upon and special adaptation to human affection.[29]
Color

This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. (January 2018) (Learn how and when to remove this template message)
Reflectance spectra for the flowers of several varieties of rose. A red rose absorbs about 99.7% of light across a broad area below the red wavelengths of the spectrum, leading to an exceptionally pure red. A yellow rose will reflect about 5% of blue light, producing an unsaturated yellow (a yellow with a degree of white in it).

Many flowering plants reflect as much light as possible within the range of visible wavelengths of the pollinator the plant intends to attract. Flowers that reflect the full range of visible light are generally perceived as white by a human observer. An important feature of white flowers is that they reflect equally across the visible spectrum. While many flowering plants use white to attract pollinators, the use of color is also widespread (even within the same species). Color allows a flowering plant to be more specific about the pollinator it seeks to attract. The color model used by human color reproduction technology (CMYK) relies on the modulation of pigments that divide the spectrum into broad areas of absorption. Flowering plants by contrast are able to shift the transition point wavelength between absorption and reflection. If it is assumed that the visual systems of most pollinators view the visible spectrum as circular then it may be said that flowering plants produce color by absorbing the light in one region of the spectrum and reflecting the light in the other region. With CMYK, color is produced as a function of the amplitude of the broad regions of absorption. Flowering plants by contrast produce color by modifying the frequency (or rather wavelength) of the light reflected. Most flowers absorb light in the blue to yellow region of the spectrum and reflect light from the green to red region of the spectrum. For many species of flowering plant, it is the transition point that characterizes the color that they produce. Color may be modulated by shifting the transition point between absorption and reflection and in this way a flowering plant may specify which pollinator it seeks to attract. Some flowering plants also have a limited ability to modulate areas of absorption. This is typically not as precise as control over wavelength. Humans observers will perceive this as degrees of saturation (the amount of white in the color).
Symbolism
Lilies are often used to denote life or resurrection
Main article: Language of flowers

Many flowers have important symbolic meanings in Western culture.[30] The practice of assigning meanings to flowers is known as floriography. Some of the more common examples include:

    Red roses are given as a symbol of love, beauty, and passion.[31]
    Poppies are a symbol of consolation in time of death. In the United Kingdom, New Zealand, Australia and Canada, red poppies are worn to commemorate soldiers who have died in times of war.
    Irises/Lily are used in burials as a symbol referring to "resurrection/life". It is also associated with stars (sun) and its petals blooming/shining.
    Daisies are a symbol of innocence.

Flowers are common subjects of still life paintings, such as this one by Ambrosius Bosschaert the Elder

Because of their varied and colorful appearance, flowers have long been a favorite subject of visual artists as well. Some of the most celebrated paintings from well-known painters are of flowers, such as Van Gogh's sunflowers series or Monet's water lilies. Flowers are also dried, freeze dried and pressed in order to create permanent, three-dimensional pieces of flower art.

Flowers within art are also representative of the female genitalia,[32] as seen in the works of artists such as Georgia O'Keeffe, Imogen Cunningham, Veronica Ruiz de Velasco, and Judy Chicago, and in fact in Asian and western classical art. Many cultures around the world have a marked tendency to associate flowers with femininity.

The great variety of delicate and beautiful flowers has inspired the works of numerous poets, especially from the 18th–19th century Romantic era. Famous examples include William Wordsworth's I Wandered Lonely as a Cloud and William Blake's Ah! Sun-Flower.

Their symbolism in dreams has also been discussed, with possible interpretations including "blossoming potential".[33]

The Roman goddess of flowers, gardens, and the season of Spring is Flora. The Greek goddess of spring, flowers and nature is Chloris.

In Hindu mythology, flowers have a significant status. Vishnu, one of the three major gods in the Hindu system, is often depicted standing straight on a lotus flower.[34] Apart from the association with Vishnu, the Hindu tradition also considers the lotus to have spiritual significance.[35] For example, it figures in the Hindu stories of creation.[36]
Usage
Flower market – Detroit's Eastern Market
A woman spreading flowers over a lingam in a temple in Varanasi

In modern times people have sought ways to cultivate, buy, wear, or otherwise be around flowers and blooming plants, partly because of their agreeable appearance and smell.[citation needed] Around the world, people use flowers for a wide range of events and functions that, cumulatively, encompass one's lifetime:

    For new births or christenings
    As a corsage or boutonniere worn at social functions or for holidays
    As tokens of love or esteem
    For wedding flowers for the bridal party, and for decorations for the hall
    As brightening decorations within the home
    As a gift of remembrance for bon voyage parties, welcome-home parties, and "thinking of you" gifts
    For funeral flowers and expressions of sympathy for the grieving
    For worshiping goddesses. In Hindu culture adherents commonly bring flowers as a gift to temples

People therefore grow flowers around their homes, dedicate entire parts of their living space to flower gardens, pick wildflowers, or buy flowers from florists who depend on an entire network of commercial growers and shippers to support their trade.

Flowers provide less food than other major plants parts (seeds, fruits, roots, stems and leaves) but they provide several important foods and spices. Flower vegetables include broccoli, cauliflower and artichoke. The most expensive spice, saffron, consists of dried stigmas of a crocus. Other flower spices are cloves and capers. Hops flowers are used to flavor beer. Marigold flowers are fed to chickens to give their egg yolks a golden yellow color, which consumers find more desirable; dried and ground marigold flowers are also used as a spice and colouring agent in Georgian cuisine. Flowers of the dandelion and elder are often made into wine. Bee pollen, pollen collected from bees, is considered a health food by some people. Honey consists of bee-processed flower nectar and is often named for the type of flower, e.g. orange blossom honey, clover honey and tupelo honey.

Hundreds of fresh flowers are edible but few are widely marketed as food. They are often used to add color and flavor to salads. Squash flowers are dipped in breadcrumbs and fried. Edible flowers include nasturtium, chrysanthemum, carnation, cattail, honeysuckle, chicory, cornflower, canna, and sunflower. Some edible flowers are sometimes candied such as daisy, rose, and violet (one may also come across a candied pansy).

Flowers can also be made into herbal teas. Dried flowers such as chrysanthemum, rose, jasmine, camomile are infused into tea both for their fragrance and medical properties. Sometimes, they are also mixed with tea leaves for the added fragrance.

Flowers have been used since as far back as 50,000 years in funeral rituals. Many cultures do draw a connection between flowers and life and death, and because of their seasonal return flowers also suggest rebirth, which may explain why many people place flowers upon graves. In ancient times the Greeks would place a crown of flowers on the head of the deceased as well as cover tombs with wreaths and flower petals. Rich and powerful women in ancient Egypt would wear floral headdresses and necklaces upon their death as representations of renewal and a joyful afterlife, and the Mexicans to this day use flowers prominently in their Day of the Dead celebrations in the same way that their Aztec ancestors did.
